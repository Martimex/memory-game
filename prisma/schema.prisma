// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String     @id @default(cuid())
  name           String?    @unique
  email          String?    @unique
  role           String     @default("player")
  exp            Int?       @default(0)
  isBanned       Boolean?   @default(false)
  registeredAt   DateTime   @default(dbgenerated("NOW()")) 
  progressLevels Progress[]
  createdLevels  Level[]
  // NEXT AUTH STUFF
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
}

model Account {
  // NEXT AUTH STUFF
  id                    String @id @default(cuid())
  userId                String @map("user_id")
  type                  String
  provider              String
  providerAccountId     String @map("provider_account_id")
  refresh_token         String?
  access_token          String? 
  expires_at            Int?
  token_type            String?
  scope                 String?
  id_token              String?
  session_state         String?
  oauth_token_secret    String?
  oauth_token           String?

  user                  User @relation(fields:[userId], references:[id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                   String @id @default(cuid())
  sessionToken         String @unique @map("session_token")
  userId               String @map("user_id")
  expires              DateTime

  user                 User @relation(fields:[userId], references:[id], onDelete: Cascade) 
}

model VerificationToken {
  id                  Int @id @default(autoincrement())
  identifier          String
  token               String  @unique
  expires             DateTime

  @@unique([identifier, token]) 
}

model Level {
  id                 String     @id @default(cuid())
  number             Int        @unique @default(autoincrement())
  name               String
  difficulty         String
  stages             Int
  tiles              Json
  board              Json
  limitations        Json
  starting_animation Json
  tile_animation     Json
  uncover            Json
  score              Json
  win                Json
  fade               Json
  star_conditions    Json
  variables          Json?
  others             Json?
  createdAt          DateTime   @default(dbgenerated("NOW()"))
  Created_By         User?      @relation(fields: [creatorUserId], references: [id])
  Serie              Serie?     @relation(fields: [serieId], references: [id])
  creatorUserId      String?
  serieId            String?
  Progress           Progress[]
}

model Serie {
  id               String  @id @default(cuid())
  index            Int     @default(autoincrement())
  name             String  @unique
  name_abbr        String  @unique
  isReleased       Boolean?
  description      String?
  Levels           Level[]
}

model Progress {
  id              String @id @default(cuid())
  stars_got       Int
  lv_progress     Int
  lv_difficulty   String
  highscore       Int
  User            User   @relation(fields: [userId], references: [id])
  Level           Level  @relation(fields: [levelId], references: [id])
  userId          String
  levelId         String
}
